{
  "error": {
    "oclif": {
      "exit": 2
    },
    "parse": {
      "input": {
        "argv": [
          "-v",
          "1.0.0",
          "-b",
          "10",
          "/home/kr/Projects/mobile/mobile-app/",
          "--json"
        ],
        "context": {
          "argv": [
            "-v",
            "1.0.0",
            "-b",
            "10",
            "/home/kr/Projects/mobile/mobile-app/",
            "--json"
          ],
          "config": {
            "options": {
              "root": "/home/kr/Projects/tools/capacitor-set-version/bin/run"
            },
            "_base": "@oclif/core@1.7.0",
            "debug": 0,
            "plugins": [
              {
                "options": {
                  "root": "/home/kr/Projects/tools/capacitor-set-version/bin/run"
                },
                "_base": "@oclif/core@1.7.0",
                "valid": true,
                "alreadyLoaded": false,
                "children": [],
                "warned": false,
                "type": "core",
                "root": "/home/kr/Projects/tools/capacitor-set-version",
                "pjson": {
                  "name": "capacitor-set-version",
                  "description": "Write version number and build number for Android and iOS on ionic/capacitor projects",
                  "version": "1.3.37",
                  "author": "Hausenn @HausennTechnologies",
                  "license": "MIT",
                  "homepage": "https://github.com/HausennTechnologies/capacitor-set-version",
                  "repository": "https://github.com/HausennTechnologies/capacitor-set-version",
                  "bugs": "https://github.com/HausennTechnologies/capacitor-set-version/issues",
                  "main": "dist/index.js",
                  "types": "dist/index.d.ts",
                  "scripts": {
                    "build": "shx rm -rf dist && tsc -b",
                    "lint": "eslint . --ext .ts --config .eslintrc",
                    "postpack": "shx rm -f oclif.manifest.json",
                    "posttest": "yarn lint",
                    "prepack": "yarn build && oclif manifest && oclif readme",
                    "test": "mocha --forbid-only \"test/**/*.test.ts\"",
                    "version": "oclif readme && git add README.md",
                    "prepare": "husky install",
                    "release": "semantic-release"
                  },
                  "keywords": [
                    "capacitorjs",
                    "capacitor",
                    "version",
                    "android",
                    "ios",
                    "ionic"
                  ],
                  "files": [
                    "/bin",
                    "/dist",
                    "/npm-shrinkwrap.json",
                    "/oclif.manifest.json"
                  ],
                  "engines": {
                    "node": ">=12.0.0"
                  },
                  "bin": {
                    "capacitor-set-version": "./bin/run"
                  },
                  "oclif": {
                    "bin": "capacitor-set-version",
                    "dirname": "capacitor-set-version",
                    "commands": "./dist/commands",
                    "default": "set",
                    "topicSeparator": ":",
                    "topics": {
                      "set": {
                        "description": "Set Version and Build Number for Android and iOS projects",
                        "name": "set"
                      }
                    },
                    "plugins": [
                      "@oclif/plugin-help",
                      "@oclif/plugin-plugins",
                      "@oclif/plugin-version",
                      "@oclif/plugin-commands",
                      "@oclif/plugin-autocomplete"
                    ],
                    "update": {
                      "node": {},
                      "s3": {
                        "templates": {
                          "target": {
                            "baseDir": "<%- bin %>",
                            "unversioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-<%- platform %>-<%- arch %><%- ext %>",
                            "versioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %>-<%- platform %>-<%- arch %><%- ext %>",
                            "manifest": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- platform %>-<%- arch %>"
                          },
                          "vanilla": {
                            "unversioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %><%- ext %>",
                            "versioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %><%- ext %>",
                            "baseDir": "<%- bin %>",
                            "manifest": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %>version"
                          }
                        }
                      }
                    }
                  },
                  "dependencies": {
                    "@oclif/core": "^1",
                    "@oclif/plugin-autocomplete": "^1.3.0",
                    "@oclif/plugin-commands": "^2.1.0",
                    "@oclif/plugin-help": "^5",
                    "@oclif/plugin-plugins": "^2.1.0",
                    "@oclif/plugin-version": "^1.0.4",
                    "plist": "^3.0.5",
                    "semver": "^7.3.7",
                    "tslib": "^2.4.0"
                  },
                  "devDependencies": {
                    "@commitlint/cli": "^16.2.3",
                    "@commitlint/config-conventional": "^16.2.1",
                    "@oclif/test": "^2",
                    "@semantic-release/changelog": "^6.0.1",
                    "@semantic-release/git": "^10.0.1",
                    "@semantic-release/github": "^8.0.4",
                    "@types/chai": "^4",
                    "@types/mocha": "^9.0.0",
                    "@types/mock-fs": "^4.13.1",
                    "@types/node": "^16.9.4",
                    "@types/plist": "^3.0.2",
                    "@types/semver": "^7.3.9",
                    "@typescript-eslint/eslint-plugin": "^5.19.0",
                    "@typescript-eslint/parser": "^5.19.0",
                    "chai": "^4",
                    "eslint": "^7.32.0",
                    "eslint-config-oclif": "^4",
                    "eslint-config-oclif-typescript": "^1.0.2",
                    "eslint-config-prettier": "^8.5.0",
                    "eslint-plugin-prettier": "^4.0.0",
                    "globby": "^11.1.0",
                    "husky": "^7.0.4",
                    "mocha": "^9",
                    "mock-fs": "^5.1.2",
                    "nyc": "^15.1.0",
                    "oclif": "^2",
                    "prettier": "^2.6.2",
                    "semantic-release": "^19.0.2",
                    "shx": "^0.3.3",
                    "ts-node": "^10.2.1",
                    "tslib": "^2.3.1",
                    "typescript": "~4.4.3"
                  }
                },
                "name": "capacitor-set-version",
                "alias": "capacitor-set-version",
                "version": "1.3.37",
                "hooks": {},
                "manifest": {
                  "version": "1.3.37",
                  "commands": {
                    "set:android": {
                      "id": "set:android",
                      "description": "Set android version and build number",
                      "strict": true,
                      "pluginName": "capacitor-set-version",
                      "pluginAlias": "capacitor-set-version",
                      "pluginType": "core",
                      "aliases": [],
                      "examples": [
                        "<%= config.bin %> <%= command.id %> -v 1.0.0-rc1 -b 10"
                      ],
                      "flags": {
                        "json": {
                          "name": "json",
                          "type": "boolean",
                          "description": "Format output as json.",
                          "helpGroup": "GLOBAL",
                          "allowNo": false
                        },
                        "version": {
                          "name": "version",
                          "type": "option",
                          "char": "v",
                          "description": "Set specific version",
                          "required": true,
                          "helpValue": "x.x.x",
                          "multiple": false
                        },
                        "build": {
                          "name": "build",
                          "type": "option",
                          "char": "b",
                          "description": "Set specific build",
                          "required": true,
                          "helpValue": "10",
                          "multiple": false
                        },
                        "quiet": {
                          "name": "quiet",
                          "type": "boolean",
                          "char": "q",
                          "description": "Print only error messages",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "dir",
                          "description": "Capacitor project root directory",
                          "required": false
                        }
                      ],
                      "enableJsonFlag": true,
                      "_globalFlags": {
                        "json": {
                          "description": "Format output as json.",
                          "helpGroup": "GLOBAL",
                          "allowNo": false,
                          "type": "boolean"
                        }
                      }
                    },
                    "set": {
                      "id": "set",
                      "description": "Set Android and iOS app version and build number for capacitorjs projects.",
                      "strict": true,
                      "pluginName": "capacitor-set-version",
                      "pluginAlias": "capacitor-set-version",
                      "pluginType": "core",
                      "aliases": [],
                      "flags": {
                        "json": {
                          "name": "json",
                          "type": "boolean",
                          "description": "Format output as json.",
                          "helpGroup": "GLOBAL",
                          "allowNo": false
                        },
                        "version": {
                          "name": "version",
                          "type": "option",
                          "char": "v",
                          "description": "Set specific version",
                          "required": true,
                          "helpValue": "x.x.x",
                          "multiple": false
                        },
                        "build": {
                          "name": "build",
                          "type": "option",
                          "char": "b",
                          "description": "Set specific build",
                          "required": true,
                          "helpValue": "10",
                          "multiple": false
                        },
                        "quiet": {
                          "name": "quiet",
                          "type": "boolean",
                          "char": "q",
                          "description": "Print only error messages",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "dir",
                          "description": "Capacitor project root directory",
                          "required": false
                        }
                      ],
                      "enableJsonFlag": true,
                      "_globalFlags": {
                        "json": {
                          "description": "Format output as json.",
                          "helpGroup": "GLOBAL",
                          "allowNo": false,
                          "type": "boolean"
                        }
                      }
                    },
                    "set:ios": {
                      "id": "set:ios",
                      "description": "Set iOS project version and build number",
                      "strict": true,
                      "pluginName": "capacitor-set-version",
                      "pluginAlias": "capacitor-set-version",
                      "pluginType": "core",
                      "aliases": [],
                      "examples": [
                        "<%= config.bin %> <%= command.id %>"
                      ],
                      "flags": {
                        "version": {
                          "name": "version",
                          "type": "option",
                          "char": "v",
                          "description": "Set specific version",
                          "required": true,
                          "helpValue": "x.x.x",
                          "multiple": false
                        },
                        "build": {
                          "name": "build",
                          "type": "option",
                          "char": "b",
                          "description": "Set specific build",
                          "required": true,
                          "helpValue": "10",
                          "multiple": false
                        },
                        "quiet": {
                          "name": "quiet",
                          "type": "boolean",
                          "char": "q",
                          "description": "Print only error messages",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "dir",
                          "description": "Capacitor project root directory",
                          "required": false
                        }
                      ]
                    }
                  }
                },
                "commands": [
                  {
                    "id": "set",
                    "description": "Set Android and iOS app version and build number for capacitorjs projects.",
                    "strict": true,
                    "pluginName": "capacitor-set-version",
                    "pluginAlias": "capacitor-set-version",
                    "pluginType": "core",
                    "aliases": [],
                    "flags": {
                      "json": {
                        "name": "json",
                        "type": "boolean",
                        "description": "Format output as json.",
                        "helpGroup": "GLOBAL",
                        "allowNo": false
                      },
                      "version": {
                        "name": "version",
                        "type": "option",
                        "char": "v",
                        "description": "Set specific version",
                        "required": true,
                        "helpValue": "x.x.x",
                        "multiple": false
                      },
                      "build": {
                        "name": "build",
                        "type": "option",
                        "char": "b",
                        "description": "Set specific build",
                        "required": true,
                        "helpValue": "10",
                        "multiple": false
                      },
                      "quiet": {
                        "name": "quiet",
                        "type": "boolean",
                        "char": "q",
                        "description": "Print only error messages",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "dir",
                        "description": "Capacitor project root directory",
                        "required": false
                      }
                    ],
                    "enableJsonFlag": true,
                    "_globalFlags": {
                      "json": {
                        "description": "Format output as json.",
                        "helpGroup": "GLOBAL",
                        "allowNo": false,
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "id": "set:android",
                    "description": "Set android version and build number",
                    "strict": true,
                    "pluginName": "capacitor-set-version",
                    "pluginAlias": "capacitor-set-version",
                    "pluginType": "core",
                    "aliases": [],
                    "examples": [
                      "<%= config.bin %> <%= command.id %> -v 1.0.0-rc1 -b 10"
                    ],
                    "flags": {
                      "json": {
                        "name": "json",
                        "type": "boolean",
                        "description": "Format output as json.",
                        "helpGroup": "GLOBAL",
                        "allowNo": false
                      },
                      "version": {
                        "name": "version",
                        "type": "option",
                        "char": "v",
                        "description": "Set specific version",
                        "required": true,
                        "helpValue": "x.x.x",
                        "multiple": false
                      },
                      "build": {
                        "name": "build",
                        "type": "option",
                        "char": "b",
                        "description": "Set specific build",
                        "required": true,
                        "helpValue": "10",
                        "multiple": false
                      },
                      "quiet": {
                        "name": "quiet",
                        "type": "boolean",
                        "char": "q",
                        "description": "Print only error messages",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "dir",
                        "description": "Capacitor project root directory",
                        "required": false
                      }
                    ],
                    "enableJsonFlag": true,
                    "_globalFlags": {
                      "json": {
                        "description": "Format output as json.",
                        "helpGroup": "GLOBAL",
                        "allowNo": false,
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "id": "set:ios",
                    "description": "Set iOS project version and build number",
                    "strict": true,
                    "pluginName": "capacitor-set-version",
                    "pluginAlias": "capacitor-set-version",
                    "pluginType": "core",
                    "aliases": [],
                    "examples": [
                      "<%= config.bin %> <%= command.id %>"
                    ],
                    "flags": {
                      "version": {
                        "name": "version",
                        "type": "option",
                        "char": "v",
                        "description": "Set specific version",
                        "required": true,
                        "helpValue": "x.x.x",
                        "multiple": false
                      },
                      "build": {
                        "name": "build",
                        "type": "option",
                        "char": "b",
                        "description": "Set specific build",
                        "required": true,
                        "helpValue": "10",
                        "multiple": false
                      },
                      "quiet": {
                        "name": "quiet",
                        "type": "boolean",
                        "char": "q",
                        "description": "Print only error messages",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "dir",
                        "description": "Capacitor project root directory",
                        "required": false
                      }
                    ]
                  }
                ]
              },
              {
                "options": {
                  "type": "core",
                  "root": "/home/kr/Projects/tools/capacitor-set-version",
                  "name": "@oclif/plugin-commands"
                },
                "_base": "@oclif/core@1.7.0",
                "valid": true,
                "alreadyLoaded": false,
                "children": [],
                "warned": false,
                "type": "core",
                "root": "/home/kr/Projects/tools/capacitor-set-version/node_modules/@oclif/plugin-commands",
                "pjson": {
                  "name": "@oclif/plugin-commands",
                  "description": "plugin to show the list of all the commands",
                  "version": "2.1.0",
                  "author": "Salesforce",
                  "bugs": "https://github.com/oclif/plugin-commands/issues",
                  "dependencies": {
                    "@oclif/core": "^1.2.0",
                    "lodash": "^4.17.11"
                  },
                  "devDependencies": {
                    "@oclif/plugin-help": "^5.1.7",
                    "@oclif/test": "^2.0.2",
                    "@types/chai": "^4.1.6",
                    "@types/lodash": "^4.14.117",
                    "@types/mocha": "^8.0.0",
                    "@types/nock": "^11.1.0",
                    "@types/node": "^14.0.14",
                    "chai": "^4.2.0",
                    "eslint": "^7.3.1",
                    "eslint-config-oclif": "^3.1.0",
                    "eslint-config-oclif-typescript": "^0.2.0",
                    "globby": "^11",
                    "mocha": "^8",
                    "nock": "^13.0.0",
                    "nyc": "^15.1.0",
                    "oclif": "^2.3.0",
                    "shx": "^0.3.3",
                    "ts-node": "^9.1.1",
                    "tslib": "^2.0.0",
                    "typescript": "4.4.3"
                  },
                  "engines": {
                    "node": ">=12.0.0"
                  },
                  "files": [
                    "/lib",
                    "/oclif.manifest.json",
                    "/yarn.lock"
                  ],
                  "homepage": "https://github.com/oclif/plugin-commands",
                  "keywords": [
                    "oclif-plugin"
                  ],
                  "license": "MIT",
                  "oclif": {
                    "commands": "./lib/commands",
                    "bin": "oclif-example",
                    "devPlugins": [
                      "@oclif/plugin-help"
                    ]
                  },
                  "repository": "oclif/plugin-commands",
                  "scripts": {
                    "lint": "eslint . --ext .ts --config .eslintrc",
                    "pretest": "yarn build && tsc -p test --noEmit",
                    "test": "mocha --forbid-only \"test/**/*.test.ts\"",
                    "posttest": "yarn lint",
                    "prepack": "shx rm -rf lib && tsc && oclif manifest . && oclif readme",
                    "postpack": "shx rm -f oclif.manifest.json",
                    "version": "oclif readme && git add README.md",
                    "build": "shx rm -rf lib && tsc"
                  }
                },
                "name": "@oclif/plugin-commands",
                "alias": "@oclif/plugin-commands",
                "version": "2.1.0",
                "hooks": {},
                "manifest": {
                  "version": "2.1.0",
                  "commands": {
                    "commands": {
                      "id": "commands",
                      "description": "list all the commands",
                      "strict": true,
                      "pluginName": "@oclif/plugin-commands",
                      "pluginAlias": "@oclif/plugin-commands",
                      "pluginType": "core",
                      "aliases": [],
                      "flags": {
                        "json": {
                          "name": "json",
                          "type": "boolean",
                          "description": "Format output as json.",
                          "helpGroup": "GLOBAL",
                          "allowNo": false
                        },
                        "help": {
                          "name": "help",
                          "type": "boolean",
                          "char": "h",
                          "description": "Show CLI help.",
                          "allowNo": false
                        },
                        "hidden": {
                          "name": "hidden",
                          "type": "boolean",
                          "description": "show hidden commands",
                          "allowNo": false
                        },
                        "columns": {
                          "name": "columns",
                          "type": "option",
                          "description": "only show provided columns (comma-separated)",
                          "multiple": false,
                          "exclusive": [
                            "extended"
                          ]
                        },
                        "sort": {
                          "name": "sort",
                          "type": "option",
                          "description": "property to sort by (prepend '-' for descending)",
                          "multiple": false
                        },
                        "filter": {
                          "name": "filter",
                          "type": "option",
                          "description": "filter property by partial string matching, ex: name=foo",
                          "multiple": false
                        },
                        "csv": {
                          "name": "csv",
                          "type": "boolean",
                          "description": "output is csv format [alias: --output=csv]",
                          "allowNo": false,
                          "exclusive": [
                            "no-truncate"
                          ]
                        },
                        "output": {
                          "name": "output",
                          "type": "option",
                          "description": "output in a more machine friendly format",
                          "multiple": false,
                          "options": [
                            "csv",
                            "json",
                            "yaml"
                          ],
                          "exclusive": [
                            "no-truncate",
                            "csv"
                          ]
                        },
                        "extended": {
                          "name": "extended",
                          "type": "boolean",
                          "char": "x",
                          "description": "show extra columns",
                          "allowNo": false,
                          "exclusive": [
                            "columns"
                          ]
                        },
                        "no-truncate": {
                          "name": "no-truncate",
                          "type": "boolean",
                          "description": "do not truncate output to fit screen",
                          "allowNo": false,
                          "exclusive": [
                            "csv"
                          ]
                        },
                        "no-header": {
                          "name": "no-header",
                          "type": "boolean",
                          "description": "hide table header from output",
                          "allowNo": false,
                          "exclusive": [
                            "csv"
                          ]
                        }
                      },
                      "args": [],
                      "enableJsonFlag": true
                    }
                  }
                },
                "commands": [
                  {
                    "id": "commands",
                    "description": "list all the commands",
                    "strict": true,
                    "pluginName": "@oclif/plugin-commands",
                    "pluginAlias": "@oclif/plugin-commands",
                    "pluginType": "core",
                    "aliases": [],
                    "flags": {
                      "json": {
                        "name": "json",
                        "type": "boolean",
                        "description": "Format output as json.",
                        "helpGroup": "GLOBAL",
                        "allowNo": false
                      },
                      "help": {
                        "name": "help",
                        "type": "boolean",
                        "char": "h",
                        "description": "Show CLI help.",
                        "allowNo": false
                      },
                      "hidden": {
                        "name": "hidden",
                        "type": "boolean",
                        "description": "show hidden commands",
                        "allowNo": false
                      },
                      "columns": {
                        "name": "columns",
                        "type": "option",
                        "description": "only show provided columns (comma-separated)",
                        "multiple": false,
                        "exclusive": [
                          "extended"
                        ]
                      },
                      "sort": {
                        "name": "sort",
                        "type": "option",
                        "description": "property to sort by (prepend '-' for descending)",
                        "multiple": false
                      },
                      "filter": {
                        "name": "filter",
                        "type": "option",
                        "description": "filter property by partial string matching, ex: name=foo",
                        "multiple": false
                      },
                      "csv": {
                        "name": "csv",
                        "type": "boolean",
                        "description": "output is csv format [alias: --output=csv]",
                        "allowNo": false,
                        "exclusive": [
                          "no-truncate"
                        ]
                      },
                      "output": {
                        "name": "output",
                        "type": "option",
                        "description": "output in a more machine friendly format",
                        "multiple": false,
                        "options": [
                          "csv",
                          "json",
                          "yaml"
                        ],
                        "exclusive": [
                          "no-truncate",
                          "csv"
                        ]
                      },
                      "extended": {
                        "name": "extended",
                        "type": "boolean",
                        "char": "x",
                        "description": "show extra columns",
                        "allowNo": false,
                        "exclusive": [
                          "columns"
                        ]
                      },
                      "no-truncate": {
                        "name": "no-truncate",
                        "type": "boolean",
                        "description": "do not truncate output to fit screen",
                        "allowNo": false,
                        "exclusive": [
                          "csv"
                        ]
                      },
                      "no-header": {
                        "name": "no-header",
                        "type": "boolean",
                        "description": "hide table header from output",
                        "allowNo": false,
                        "exclusive": [
                          "csv"
                        ]
                      }
                    },
                    "args": [],
                    "enableJsonFlag": true
                  }
                ]
              },
              {
                "options": {
                  "type": "core",
                  "root": "/home/kr/Projects/tools/capacitor-set-version",
                  "name": "@oclif/plugin-autocomplete"
                },
                "_base": "@oclif/core@1.7.0",
                "valid": true,
                "alreadyLoaded": false,
                "children": [],
                "warned": false,
                "type": "core",
                "root": "/home/kr/Projects/tools/capacitor-set-version/node_modules/@oclif/plugin-autocomplete",
                "pjson": {
                  "name": "@oclif/plugin-autocomplete",
                  "description": "autocomplete plugin for oclif",
                  "version": "1.3.0",
                  "author": "Salesforce",
                  "bugs": "https://github.com/oclif/plugin-autocomplete/issues",
                  "dependencies": {
                    "@oclif/core": "^1.7.0",
                    "chalk": "^4.1.0",
                    "debug": "^4.3.4",
                    "fs-extra": "^9.0.1"
                  },
                  "devDependencies": {
                    "@oclif/plugin-help": "^5",
                    "@oclif/test": "^2",
                    "@types/chai": "^4",
                    "@types/fs-extra": "^9.0.13",
                    "@types/mocha": "^8",
                    "@types/nock": "^11.1.0",
                    "@types/node": "^15.14.9",
                    "@types/sinon-chai": "^3.2.6",
                    "chai": "^4",
                    "eslint": "^7.3.1",
                    "eslint-config-oclif": "^3.1.0",
                    "eslint-config-oclif-typescript": "^0.2.0",
                    "globby": "^11",
                    "mocha": "^8.2.1",
                    "nock": "^13.2.1",
                    "nyc": "^15.1.0",
                    "oclif": "^2.3.0",
                    "shx": "^0.3.3",
                    "sinon": "^12.0.1",
                    "sinon-chai": "^3.7.0",
                    "ts-node": "^9.0.0",
                    "tslib": "^2.0.0",
                    "typescript": "4.6.3"
                  },
                  "engines": {
                    "node": ">=12.0.0"
                  },
                  "files": [
                    "/lib",
                    "/oclif.manifest.json"
                  ],
                  "homepage": "https://github.com/oclif/plugin-autocomplete",
                  "keywords": [
                    "oclif-plugin"
                  ],
                  "license": "MIT",
                  "oclif": {
                    "commands": "./lib/commands",
                    "bin": "oclif-example",
                    "devPlugins": [
                      "@oclif/plugin-help"
                    ]
                  },
                  "repository": "oclif/plugin-autocomplete",
                  "scripts": {
                    "lint": "eslint . --ext .ts --config .eslintrc",
                    "pretest": "yarn build && tsc -p test",
                    "test": "mocha --forbid-only \"test/**/*.test.ts\"",
                    "posttest": "yarn lint",
                    "prepack": "shx rm -rf lib && tsc && oclif manifest . && oclif readme",
                    "postpack": "shx rm -f oclif.manifest.json",
                    "version": "oclif readme && git add README.md",
                    "build": "shx rm -rf lib && tsc"
                  }
                },
                "name": "@oclif/plugin-autocomplete",
                "alias": "@oclif/plugin-autocomplete",
                "version": "1.3.0",
                "hooks": {},
                "manifest": {
                  "version": "1.3.0",
                  "commands": {
                    "autocomplete:create": {
                      "id": "autocomplete:create",
                      "description": "create autocomplete setup scripts and completion functions",
                      "strict": true,
                      "pluginName": "@oclif/plugin-autocomplete",
                      "pluginAlias": "@oclif/plugin-autocomplete",
                      "pluginType": "core",
                      "hidden": true,
                      "aliases": [],
                      "flags": {},
                      "args": []
                    },
                    "autocomplete": {
                      "id": "autocomplete",
                      "description": "display autocomplete installation instructions",
                      "strict": true,
                      "pluginName": "@oclif/plugin-autocomplete",
                      "pluginAlias": "@oclif/plugin-autocomplete",
                      "pluginType": "core",
                      "aliases": [],
                      "examples": [
                        "$ <%= config.bin %> autocomplete",
                        "$ <%= config.bin %> autocomplete bash",
                        "$ <%= config.bin %> autocomplete zsh",
                        "$ <%= config.bin %> autocomplete --refresh-cache"
                      ],
                      "flags": {
                        "refresh-cache": {
                          "name": "refresh-cache",
                          "type": "boolean",
                          "char": "r",
                          "description": "Refresh cache (ignores displaying instructions)",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "shell",
                          "description": "shell type",
                          "required": false
                        }
                      ],
                      "_globalFlags": {}
                    },
                    "autocomplete:script": {
                      "id": "autocomplete:script",
                      "description": "outputs autocomplete config script for shells",
                      "strict": true,
                      "pluginName": "@oclif/plugin-autocomplete",
                      "pluginAlias": "@oclif/plugin-autocomplete",
                      "pluginType": "core",
                      "hidden": true,
                      "aliases": [],
                      "flags": {},
                      "args": [
                        {
                          "name": "shell",
                          "description": "shell type",
                          "required": false
                        }
                      ]
                    }
                  }
                },
                "commands": [
                  {
                    "id": "autocomplete",
                    "description": "display autocomplete installation instructions",
                    "strict": true,
                    "pluginName": "@oclif/plugin-autocomplete",
                    "pluginAlias": "@oclif/plugin-autocomplete",
                    "pluginType": "core",
                    "aliases": [],
                    "examples": [
                      "$ <%= config.bin %> autocomplete",
                      "$ <%= config.bin %> autocomplete bash",
                      "$ <%= config.bin %> autocomplete zsh",
                      "$ <%= config.bin %> autocomplete --refresh-cache"
                    ],
                    "flags": {
                      "refresh-cache": {
                        "name": "refresh-cache",
                        "type": "boolean",
                        "char": "r",
                        "description": "Refresh cache (ignores displaying instructions)",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "shell",
                        "description": "shell type",
                        "required": false
                      }
                    ],
                    "_globalFlags": {}
                  },
                  {
                    "id": "autocomplete:create",
                    "description": "create autocomplete setup scripts and completion functions",
                    "strict": true,
                    "pluginName": "@oclif/plugin-autocomplete",
                    "pluginAlias": "@oclif/plugin-autocomplete",
                    "pluginType": "core",
                    "hidden": true,
                    "aliases": [],
                    "flags": {},
                    "args": []
                  },
                  {
                    "id": "autocomplete:script",
                    "description": "outputs autocomplete config script for shells",
                    "strict": true,
                    "pluginName": "@oclif/plugin-autocomplete",
                    "pluginAlias": "@oclif/plugin-autocomplete",
                    "pluginType": "core",
                    "hidden": true,
                    "aliases": [],
                    "flags": {},
                    "args": [
                      {
                        "name": "shell",
                        "description": "shell type",
                        "required": false
                      }
                    ]
                  }
                ]
              },
              {
                "options": {
                  "type": "core",
                  "root": "/home/kr/Projects/tools/capacitor-set-version",
                  "name": "@oclif/plugin-help"
                },
                "_base": "@oclif/core@1.7.0",
                "valid": true,
                "alreadyLoaded": false,
                "children": [],
                "warned": false,
                "type": "core",
                "root": "/home/kr/Projects/tools/capacitor-set-version/node_modules/@oclif/plugin-help",
                "pjson": {
                  "name": "@oclif/plugin-help",
                  "description": "Standard help for oclif.",
                  "version": "5.1.12",
                  "author": "Salesforce",
                  "bugs": "https://github.com/oclif/plugin-help/issues",
                  "dependencies": {
                    "@oclif/core": "^1.3.6"
                  },
                  "devDependencies": {
                    "@oclif/plugin-plugins": "^2.1.0",
                    "@oclif/test": "^2.1.0",
                    "@types/chai": "^4.3.0",
                    "@types/mocha": "^9.1.0",
                    "chai": "^4.3.6",
                    "eslint": "^7.3.1",
                    "eslint-config-oclif": "^4.0.0",
                    "eslint-config-oclif-typescript": "^1.0.2",
                    "mocha": "^9.2.1",
                    "oclif": "^2.5.0",
                    "shx": "^0.3.4",
                    "ts-node": "^9.1.1",
                    "typescript": "^4.6.2"
                  },
                  "engines": {
                    "node": ">=12.0.0"
                  },
                  "files": [
                    "oclif.manifest.json",
                    "/lib"
                  ],
                  "homepage": "https://github.com/oclif/plugin-help",
                  "keywords": [
                    "oclif-plugin"
                  ],
                  "license": "MIT",
                  "main": "./lib/index.js",
                  "oclif": {
                    "commands": "./lib/commands",
                    "bin": "oclif",
                    "devPlugins": [
                      "@oclif/plugin-plugins"
                    ]
                  },
                  "repository": "oclif/plugin-help",
                  "scripts": {
                    "build": "shx rm -rf lib && tsc",
                    "lint": "eslint . --ext .ts --config .eslintrc",
                    "pretest": "yarn build && tsc --noEmit",
                    "test": "mocha --forbid-only \"test/**/*.test.ts\"",
                    "posttest": "yarn lint",
                    "prepack": "yarn run build && oclif manifest .",
                    "postpack": "shx rm oclif.manifest.json"
                  },
                  "types": "./lib/index.d.ts"
                },
                "name": "@oclif/plugin-help",
                "alias": "@oclif/plugin-help",
                "version": "5.1.12",
                "hooks": {},
                "manifest": {
                  "version": "5.1.12",
                  "commands": {
                    "help": {
                      "id": "help",
                      "description": "Display help for <%= config.bin %>.",
                      "strict": false,
                      "pluginName": "@oclif/plugin-help",
                      "pluginAlias": "@oclif/plugin-help",
                      "pluginType": "core",
                      "aliases": [],
                      "flags": {
                        "nested-commands": {
                          "name": "nested-commands",
                          "type": "boolean",
                          "char": "n",
                          "description": "Include all nested commands in the output.",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "command",
                          "description": "Command to show help for.",
                          "required": false
                        }
                      ],
                      "_globalFlags": {}
                    }
                  }
                },
                "commands": [
                  {
                    "id": "help",
                    "description": "Display help for <%= config.bin %>.",
                    "strict": false,
                    "pluginName": "@oclif/plugin-help",
                    "pluginAlias": "@oclif/plugin-help",
                    "pluginType": "core",
                    "aliases": [],
                    "flags": {
                      "nested-commands": {
                        "name": "nested-commands",
                        "type": "boolean",
                        "char": "n",
                        "description": "Include all nested commands in the output.",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "command",
                        "description": "Command to show help for.",
                        "required": false
                      }
                    ],
                    "_globalFlags": {}
                  }
                ]
              },
              {
                "options": {
                  "type": "core",
                  "root": "/home/kr/Projects/tools/capacitor-set-version",
                  "name": "@oclif/plugin-plugins"
                },
                "_base": "@oclif/core@1.7.0",
                "valid": true,
                "alreadyLoaded": false,
                "children": [],
                "warned": false,
                "type": "core",
                "root": "/home/kr/Projects/tools/capacitor-set-version/node_modules/@oclif/plugin-plugins",
                "pjson": {
                  "name": "@oclif/plugin-plugins",
                  "description": "plugins plugin for oclif",
                  "version": "2.1.0",
                  "author": "Salesforce",
                  "bugs": "https://github.com/oclif/plugin-plugins/issues",
                  "dependencies": {
                    "@oclif/color": "^1.0.1",
                    "@oclif/core": "^1.2.0",
                    "chalk": "^4.1.2",
                    "debug": "^4.1.0",
                    "fs-extra": "^9.0",
                    "http-call": "^5.2.2",
                    "load-json-file": "^5.3.0",
                    "npm-run-path": "^4.0.1",
                    "semver": "^7.3.2",
                    "tslib": "^2.0.0",
                    "yarn": "^1.22.17"
                  },
                  "devDependencies": {
                    "@commitlint/config-conventional": "^12.1.4",
                    "@oclif/plugin-help": "^5.1.10",
                    "@oclif/test": "^2.0.3",
                    "@types/chai": "^4.3.0",
                    "@types/fs-extra": "^9.0",
                    "@types/mocha": "^8.2.3",
                    "@types/node": "^14.18.3",
                    "@types/semver": "^7.3.9",
                    "@types/supports-color": "^7.2.0",
                    "chai": "^4.2.0",
                    "commitlint": "^12.1.4",
                    "eslint": "^7.31.0",
                    "eslint-config-oclif": "^4",
                    "eslint-config-oclif-typescript": "^1.0.2",
                    "fancy-test": "^2.0.0",
                    "globby": "^11.0.1",
                    "husky": "6",
                    "mocha": "^9.1.3",
                    "nock": "^13.2.1",
                    "oclif": "^2.3.0",
                    "ts-node": "^10.4.0",
                    "typescript": "4.5.4"
                  },
                  "engines": {
                    "node": ">=12.0.0"
                  },
                  "files": [
                    "oclif.manifest.json",
                    "/lib"
                  ],
                  "homepage": "https://github.com/oclif/plugin-plugins",
                  "keywords": [
                    "oclif-plugin"
                  ],
                  "license": "MIT",
                  "main": "lib/index.js",
                  "oclif": {
                    "commands": "./lib/commands",
                    "scope": "heroku-cli",
                    "hooks": {
                      "update": "./lib/hooks/update.js"
                    },
                    "devPlugins": [
                      "@oclif/plugin-help"
                    ],
                    "aliases": {
                      "aliasme": "oclif-debug"
                    },
                    "bin": "mycli"
                  },
                  "repository": "oclif/plugin-plugins",
                  "scripts": {
                    "build": "rm -rf lib && tsc",
                    "commitlint": "commitlint",
                    "clean": "rm -f oclif.manifest.json",
                    "lint": "eslint . --ext .ts --config .eslintrc",
                    "pretest": "yarn build && tsc -p test --noEmit",
                    "test": "mocha --forbid-only \"test/**/*.test.ts\"",
                    "posttest": "yarn lint",
                    "prepublishOnly": "yarn run build && oclif manifest . && oclif readme",
                    "postpublish": "yarn run clean",
                    "preversion": "yarn run clean",
                    "version": "oclif readme && git add README.md"
                  },
                  "types": "lib/index.d.ts"
                },
                "name": "@oclif/plugin-plugins",
                "alias": "@oclif/plugin-plugins",
                "version": "2.1.0",
                "hooks": {
                  "update": [
                    "./lib/hooks/update.js"
                  ]
                },
                "manifest": {
                  "version": "2.1.0",
                  "commands": {
                    "plugins": {
                      "id": "plugins",
                      "description": "List installed plugins.",
                      "strict": true,
                      "pluginName": "@oclif/plugin-plugins",
                      "pluginAlias": "@oclif/plugin-plugins",
                      "pluginType": "core",
                      "aliases": [],
                      "examples": [
                        "$ <%- config.bin %> plugins"
                      ],
                      "flags": {
                        "core": {
                          "name": "core",
                          "type": "boolean",
                          "description": "Show core plugins.",
                          "allowNo": false
                        }
                      },
                      "args": []
                    },
                    "plugins:inspect": {
                      "id": "plugins:inspect",
                      "description": "Displays installation properties of a plugin.",
                      "strict": false,
                      "usage": "plugins:inspect PLUGIN...",
                      "pluginName": "@oclif/plugin-plugins",
                      "pluginAlias": "@oclif/plugin-plugins",
                      "pluginType": "core",
                      "aliases": [],
                      "examples": [
                        "$ <%= config.bin %> plugins:inspect <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> "
                      ],
                      "flags": {
                        "help": {
                          "name": "help",
                          "type": "boolean",
                          "char": "h",
                          "description": "Show CLI help.",
                          "allowNo": false
                        },
                        "verbose": {
                          "name": "verbose",
                          "type": "boolean",
                          "char": "v",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "plugin",
                          "description": "Plugin to inspect.",
                          "required": true,
                          "default": "."
                        }
                      ]
                    },
                    "plugins:install": {
                      "id": "plugins:install",
                      "description": "Installs a plugin into the CLI.\nCan be installed from npm or a git url.\n\nInstallation of a user-installed plugin will override a core plugin.\n\ne.g. If you have a core plugin that has a 'hello' command, installing a user-installed plugin with a 'hello' command will override the core plugin implementation. This is useful if a user needs to update core plugin functionality in the CLI without the need to patch and update the whole CLI.\n",
                      "strict": false,
                      "usage": "plugins:install PLUGIN...",
                      "pluginName": "@oclif/plugin-plugins",
                      "pluginAlias": "@oclif/plugin-plugins",
                      "pluginType": "core",
                      "aliases": [
                        "plugins:add"
                      ],
                      "examples": [
                        "$ <%= config.bin %> plugins:install <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> ",
                        "$ <%= config.bin %> plugins:install https://github.com/someuser/someplugin",
                        "$ <%= config.bin %> plugins:install someuser/someplugin"
                      ],
                      "flags": {
                        "help": {
                          "name": "help",
                          "type": "boolean",
                          "char": "h",
                          "description": "Show CLI help.",
                          "allowNo": false
                        },
                        "verbose": {
                          "name": "verbose",
                          "type": "boolean",
                          "char": "v",
                          "allowNo": false
                        },
                        "force": {
                          "name": "force",
                          "type": "boolean",
                          "char": "f",
                          "description": "Run yarn install with force flag.",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "plugin",
                          "description": "Plugin to install.",
                          "required": true
                        }
                      ]
                    },
                    "plugins:link": {
                      "id": "plugins:link",
                      "description": "Links a plugin into the CLI for development.\nInstallation of a linked plugin will override a user-installed or core plugin.\n\ne.g. If you have a user-installed or core plugin that has a 'hello' command, installing a linked plugin with a 'hello' command will override the user-installed or core plugin implementation. This is useful for development work.\n",
                      "strict": true,
                      "usage": "plugins:link PLUGIN",
                      "pluginName": "@oclif/plugin-plugins",
                      "pluginAlias": "@oclif/plugin-plugins",
                      "pluginType": "core",
                      "aliases": [],
                      "examples": [
                        "$ <%= config.bin %> plugins:link <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> "
                      ],
                      "flags": {
                        "help": {
                          "name": "help",
                          "type": "boolean",
                          "char": "h",
                          "description": "Show CLI help.",
                          "allowNo": false
                        },
                        "verbose": {
                          "name": "verbose",
                          "type": "boolean",
                          "char": "v",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "path",
                          "description": "path to plugin",
                          "required": true,
                          "default": "."
                        }
                      ]
                    },
                    "plugins:uninstall": {
                      "id": "plugins:uninstall",
                      "description": "Removes a plugin from the CLI.",
                      "strict": true,
                      "usage": "plugins:uninstall PLUGIN...",
                      "pluginName": "@oclif/plugin-plugins",
                      "pluginAlias": "@oclif/plugin-plugins",
                      "pluginType": "core",
                      "aliases": [
                        "plugins:unlink",
                        "plugins:remove"
                      ],
                      "flags": {
                        "help": {
                          "name": "help",
                          "type": "boolean",
                          "char": "h",
                          "description": "Show CLI help.",
                          "allowNo": false
                        },
                        "verbose": {
                          "name": "verbose",
                          "type": "boolean",
                          "char": "v",
                          "allowNo": false
                        }
                      },
                      "args": [
                        {
                          "name": "plugin",
                          "description": "plugin to uninstall"
                        }
                      ],
                      "help": "\n  Example:\n    $ <%- config.bin %> plugins:uninstall <%- config.pjson.oclif.examplePlugin || \"myplugin\" %>\n  ",
                      "variableArgs": true
                    },
                    "plugins:update": {
                      "id": "plugins:update",
                      "description": "Update installed plugins.",
                      "strict": true,
                      "pluginName": "@oclif/plugin-plugins",
                      "pluginAlias": "@oclif/plugin-plugins",
                      "pluginType": "core",
                      "aliases": [],
                      "flags": {
                        "help": {
                          "name": "help",
                          "type": "boolean",
                          "char": "h",
                          "description": "Show CLI help.",
                          "allowNo": false
                        },
                        "verbose": {
                          "name": "verbose",
                          "type": "boolean",
                          "char": "v",
                          "allowNo": false
                        }
                      },
                      "args": [],
                      "topic": "plugins",
                      "command": "update"
                    }
                  }
                },
                "commands": [
                  {
                    "id": "plugins",
                    "description": "List installed plugins.",
                    "strict": true,
                    "pluginName": "@oclif/plugin-plugins",
                    "pluginAlias": "@oclif/plugin-plugins",
                    "pluginType": "core",
                    "aliases": [],
                    "examples": [
                      "$ <%- config.bin %> plugins"
                    ],
                    "flags": {
                      "core": {
                        "name": "core",
                        "type": "boolean",
                        "description": "Show core plugins.",
                        "allowNo": false
                      }
                    },
                    "args": []
                  },
                  {
                    "id": "plugins:inspect",
                    "description": "Displays installation properties of a plugin.",
                    "strict": false,
                    "usage": "plugins:inspect PLUGIN...",
                    "pluginName": "@oclif/plugin-plugins",
                    "pluginAlias": "@oclif/plugin-plugins",
                    "pluginType": "core",
                    "aliases": [],
                    "examples": [
                      "$ <%= config.bin %> plugins:inspect <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> "
                    ],
                    "flags": {
                      "help": {
                        "name": "help",
                        "type": "boolean",
                        "char": "h",
                        "description": "Show CLI help.",
                        "allowNo": false
                      },
                      "verbose": {
                        "name": "verbose",
                        "type": "boolean",
                        "char": "v",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "plugin",
                        "description": "Plugin to inspect.",
                        "required": true,
                        "default": "."
                      }
                    ]
                  },
                  {
                    "id": "plugins:install",
                    "description": "Installs a plugin into the CLI.\nCan be installed from npm or a git url.\n\nInstallation of a user-installed plugin will override a core plugin.\n\ne.g. If you have a core plugin that has a 'hello' command, installing a user-installed plugin with a 'hello' command will override the core plugin implementation. This is useful if a user needs to update core plugin functionality in the CLI without the need to patch and update the whole CLI.\n",
                    "strict": false,
                    "usage": "plugins:install PLUGIN...",
                    "pluginName": "@oclif/plugin-plugins",
                    "pluginAlias": "@oclif/plugin-plugins",
                    "pluginType": "core",
                    "aliases": [
                      "plugins:add"
                    ],
                    "examples": [
                      "$ <%= config.bin %> plugins:install <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> ",
                      "$ <%= config.bin %> plugins:install https://github.com/someuser/someplugin",
                      "$ <%= config.bin %> plugins:install someuser/someplugin"
                    ],
                    "flags": {
                      "help": {
                        "name": "help",
                        "type": "boolean",
                        "char": "h",
                        "description": "Show CLI help.",
                        "allowNo": false
                      },
                      "verbose": {
                        "name": "verbose",
                        "type": "boolean",
                        "char": "v",
                        "allowNo": false
                      },
                      "force": {
                        "name": "force",
                        "type": "boolean",
                        "char": "f",
                        "description": "Run yarn install with force flag.",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "plugin",
                        "description": "Plugin to install.",
                        "required": true
                      }
                    ]
                  },
                  {
                    "id": "plugins:link",
                    "description": "Links a plugin into the CLI for development.\nInstallation of a linked plugin will override a user-installed or core plugin.\n\ne.g. If you have a user-installed or core plugin that has a 'hello' command, installing a linked plugin with a 'hello' command will override the user-installed or core plugin implementation. This is useful for development work.\n",
                    "strict": true,
                    "usage": "plugins:link PLUGIN",
                    "pluginName": "@oclif/plugin-plugins",
                    "pluginAlias": "@oclif/plugin-plugins",
                    "pluginType": "core",
                    "aliases": [],
                    "examples": [
                      "$ <%= config.bin %> plugins:link <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> "
                    ],
                    "flags": {
                      "help": {
                        "name": "help",
                        "type": "boolean",
                        "char": "h",
                        "description": "Show CLI help.",
                        "allowNo": false
                      },
                      "verbose": {
                        "name": "verbose",
                        "type": "boolean",
                        "char": "v",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "path",
                        "description": "path to plugin",
                        "required": true,
                        "default": "."
                      }
                    ]
                  },
                  {
                    "id": "plugins:uninstall",
                    "description": "Removes a plugin from the CLI.",
                    "strict": true,
                    "usage": "plugins:uninstall PLUGIN...",
                    "pluginName": "@oclif/plugin-plugins",
                    "pluginAlias": "@oclif/plugin-plugins",
                    "pluginType": "core",
                    "aliases": [
                      "plugins:unlink",
                      "plugins:remove"
                    ],
                    "flags": {
                      "help": {
                        "name": "help",
                        "type": "boolean",
                        "char": "h",
                        "description": "Show CLI help.",
                        "allowNo": false
                      },
                      "verbose": {
                        "name": "verbose",
                        "type": "boolean",
                        "char": "v",
                        "allowNo": false
                      }
                    },
                    "args": [
                      {
                        "name": "plugin",
                        "description": "plugin to uninstall"
                      }
                    ],
                    "help": "\n  Example:\n    $ <%- config.bin %> plugins:uninstall <%- config.pjson.oclif.examplePlugin || \"myplugin\" %>\n  ",
                    "variableArgs": true
                  },
                  {
                    "id": "plugins:update",
                    "description": "Update installed plugins.",
                    "strict": true,
                    "pluginName": "@oclif/plugin-plugins",
                    "pluginAlias": "@oclif/plugin-plugins",
                    "pluginType": "core",
                    "aliases": [],
                    "flags": {
                      "help": {
                        "name": "help",
                        "type": "boolean",
                        "char": "h",
                        "description": "Show CLI help.",
                        "allowNo": false
                      },
                      "verbose": {
                        "name": "verbose",
                        "type": "boolean",
                        "char": "v",
                        "allowNo": false
                      }
                    },
                    "args": [],
                    "topic": "plugins",
                    "command": "update"
                  }
                ]
              },
              {
                "options": {
                  "type": "core",
                  "root": "/home/kr/Projects/tools/capacitor-set-version",
                  "name": "@oclif/plugin-version"
                },
                "_base": "@oclif/core@1.7.0",
                "valid": true,
                "alreadyLoaded": false,
                "children": [],
                "warned": false,
                "type": "core",
                "root": "/home/kr/Projects/tools/capacitor-set-version/node_modules/@oclif/plugin-version",
                "pjson": {
                  "name": "@oclif/plugin-version",
                  "description": "A command that shows the CLI version",
                  "version": "1.0.4",
                  "author": "Salesforce",
                  "bugs": "https://github.com/oclif/plugin-version/issues",
                  "dependencies": {
                    "@oclif/core": "^1.1.1"
                  },
                  "devDependencies": {
                    "@commitlint/config-conventional": "^12.1.4",
                    "@oclif/plugin-help": "5.1.10",
                    "@oclif/test": "^2.0.3",
                    "@types/chai": "^4.3.0",
                    "@types/mocha": "^8.0.0",
                    "@types/node": "^14.0.26",
                    "chai": "^4.2.0",
                    "commitlint": "^12.1.4",
                    "eslint": "^7.3.1",
                    "eslint-config-oclif": "^4",
                    "eslint-config-oclif-typescript": "^1.0.2",
                    "husky": "6",
                    "mocha": "^8.2.1",
                    "oclif": "2.1.0",
                    "ts-node": "^10.4.0",
                    "typescript": "4.5.2"
                  },
                  "engines": {
                    "node": ">=12.0.0"
                  },
                  "files": [
                    "oclif.manifest.json",
                    "/lib"
                  ],
                  "homepage": "https://github.com/oclif/plugin-version",
                  "keywords": [
                    "oclif-plugin"
                  ],
                  "license": "MIT",
                  "main": "lib/index.js",
                  "oclif": {
                    "commands": "./lib/commands",
                    "devPlugins": [
                      "@oclif/plugin-help"
                    ]
                  },
                  "repository": "oclif/plugin-version",
                  "scripts": {
                    "build": "rm -rf lib && tsc",
                    "commitlint": "commitlint",
                    "clean": "rm -f oclif.manifest.json",
                    "lint": "eslint . --ext .ts --config .eslintrc",
                    "pretest": "yarn build",
                    "test": "mocha --forbid-only \"test/**/*.test.ts\"",
                    "posttest": "yarn lint",
                    "prepublishOnly": "yarn run build && oclif manifest . && oclif readme",
                    "postpublish": "yarn run clean",
                    "preversion": "yarn run clean",
                    "version": "oclif readme && git add README.md"
                  },
                  "types": "lib/index.d.ts"
                },
                "name": "@oclif/plugin-version",
                "alias": "@oclif/plugin-version",
                "version": "1.0.4",
                "hooks": {},
                "manifest": {
                  "version": "1.0.4",
                  "commands": {
                    "version": {
                      "id": "version",
                      "strict": true,
                      "pluginName": "@oclif/plugin-version",
                      "pluginAlias": "@oclif/plugin-version",
                      "pluginType": "core",
                      "aliases": [],
                      "flags": {},
                      "args": []
                    }
                  }
                },
                "commands": [
                  {
                    "id": "version",
                    "strict": true,
                    "pluginName": "@oclif/plugin-version",
                    "pluginAlias": "@oclif/plugin-version",
                    "pluginType": "core",
                    "aliases": [],
                    "flags": {},
                    "args": []
                  }
                ]
              }
            ],
            "topicSeparator": ":",
            "warned": false,
            "commandPermutations": {
              "validPermutations": {}
            },
            "topicPermutations": {
              "validPermutations": {}
            },
            "_commands": {},
            "_topics": {},
            "root": "/home/kr/Projects/tools/capacitor-set-version",
            "pjson": {
              "name": "capacitor-set-version",
              "description": "Write version number and build number for Android and iOS on ionic/capacitor projects",
              "version": "1.3.37",
              "author": "Hausenn @HausennTechnologies",
              "license": "MIT",
              "homepage": "https://github.com/HausennTechnologies/capacitor-set-version",
              "repository": "https://github.com/HausennTechnologies/capacitor-set-version",
              "bugs": "https://github.com/HausennTechnologies/capacitor-set-version/issues",
              "main": "dist/index.js",
              "types": "dist/index.d.ts",
              "scripts": {
                "build": "shx rm -rf dist && tsc -b",
                "lint": "eslint . --ext .ts --config .eslintrc",
                "postpack": "shx rm -f oclif.manifest.json",
                "posttest": "yarn lint",
                "prepack": "yarn build && oclif manifest && oclif readme",
                "test": "mocha --forbid-only \"test/**/*.test.ts\"",
                "version": "oclif readme && git add README.md",
                "prepare": "husky install",
                "release": "semantic-release"
              },
              "keywords": [
                "capacitorjs",
                "capacitor",
                "version",
                "android",
                "ios",
                "ionic"
              ],
              "files": [
                "/bin",
                "/dist",
                "/npm-shrinkwrap.json",
                "/oclif.manifest.json"
              ],
              "engines": {
                "node": ">=12.0.0"
              },
              "bin": {
                "capacitor-set-version": "./bin/run"
              },
              "oclif": {
                "bin": "capacitor-set-version",
                "dirname": "capacitor-set-version",
                "commands": "./dist/commands",
                "default": "set",
                "topicSeparator": ":",
                "topics": {
                  "set": {
                    "description": "Set Version and Build Number for Android and iOS projects",
                    "name": "set"
                  }
                },
                "plugins": [
                  "@oclif/plugin-help",
                  "@oclif/plugin-plugins",
                  "@oclif/plugin-version",
                  "@oclif/plugin-commands",
                  "@oclif/plugin-autocomplete"
                ],
                "update": {
                  "node": {},
                  "s3": {
                    "templates": {
                      "target": {
                        "baseDir": "<%- bin %>",
                        "unversioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-<%- platform %>-<%- arch %><%- ext %>",
                        "versioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %>-<%- platform %>-<%- arch %><%- ext %>",
                        "manifest": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- platform %>-<%- arch %>"
                      },
                      "vanilla": {
                        "unversioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %><%- ext %>",
                        "versioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %><%- ext %>",
                        "baseDir": "<%- bin %>",
                        "manifest": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %>version"
                      }
                    }
                  }
                }
              },
              "dependencies": {
                "@oclif/core": "^1",
                "@oclif/plugin-autocomplete": "^1.3.0",
                "@oclif/plugin-commands": "^2.1.0",
                "@oclif/plugin-help": "^5",
                "@oclif/plugin-plugins": "^2.1.0",
                "@oclif/plugin-version": "^1.0.4",
                "plist": "^3.0.5",
                "semver": "^7.3.7",
                "tslib": "^2.4.0"
              },
              "devDependencies": {
                "@commitlint/cli": "^16.2.3",
                "@commitlint/config-conventional": "^16.2.1",
                "@oclif/test": "^2",
                "@semantic-release/changelog": "^6.0.1",
                "@semantic-release/git": "^10.0.1",
                "@semantic-release/github": "^8.0.4",
                "@types/chai": "^4",
                "@types/mocha": "^9.0.0",
                "@types/mock-fs": "^4.13.1",
                "@types/node": "^16.9.4",
                "@types/plist": "^3.0.2",
                "@types/semver": "^7.3.9",
                "@typescript-eslint/eslint-plugin": "^5.19.0",
                "@typescript-eslint/parser": "^5.19.0",
                "chai": "^4",
                "eslint": "^7.32.0",
                "eslint-config-oclif": "^4",
                "eslint-config-oclif-typescript": "^1.0.2",
                "eslint-config-prettier": "^8.5.0",
                "eslint-plugin-prettier": "^4.0.0",
                "globby": "^11.1.0",
                "husky": "^7.0.4",
                "mocha": "^9",
                "mock-fs": "^5.1.2",
                "nyc": "^15.1.0",
                "oclif": "^2",
                "prettier": "^2.6.2",
                "semantic-release": "^19.0.2",
                "shx": "^0.3.3",
                "ts-node": "^10.2.1",
                "tslib": "^2.3.1",
                "typescript": "~4.4.3"
              }
            },
            "name": "capacitor-set-version",
            "version": "1.3.37",
            "channel": "stable",
            "valid": true,
            "arch": "x64",
            "platform": "linux",
            "windows": false,
            "bin": "capacitor-set-version",
            "dirname": "capacitor-set-version",
            "flexibleTaxonomy": false,
            "userAgent": "capacitor-set-version/1.3.37 linux-x64 node-v16.14.2",
            "shell": "bash",
            "home": "/home/kr",
            "cacheDir": "/home/kr/.cache/capacitor-set-version",
            "configDir": "/home/kr/.config/capacitor-set-version",
            "dataDir": "/home/kr/.local/share/capacitor-set-version",
            "errlog": "/home/kr/.cache/capacitor-set-version/error.log"
          },
          "id": "set:android",
          "quiet": false
        },
        "args": [
          {
            "name": "dir",
            "description": "Capacitor project root directory",
            "required": false,
            "input": "/home/kr/Projects/mobile/mobile-app/"
          }
        ],
        "flags": {
          "color": {
            "allowNo": true,
            "type": "boolean",
            "name": "color"
          },
          "version": {
            "char": "v",
            "description": "Set specific version",
            "helpValue": "x.x.x",
            "required": true,
            "input": [],
            "multiple": false,
            "type": "option",
            "name": "version"
          },
          "build": {
            "char": "b",
            "description": "Set specific build",
            "helpValue": "10",
            "required": true,
            "input": [],
            "multiple": false,
            "type": "option",
            "name": "build"
          },
          "quiet": {
            "char": "q",
            "description": "Print only error messages",
            "allowNo": false,
            "type": "boolean",
            "name": "quiet"
          }
        },
        "strict": true
      },
      "output": {
        "args": {
          "dir": "/home/kr/Projects/mobile/mobile-app/"
        },
        "argv": [
          "/home/kr/Projects/mobile/mobile-app/",
          "--json"
        ],
        "flags": {
          "version": "1.0.0",
          "build": 10
        },
        "raw": [
          {
            "type": "flag",
            "flag": "version",
            "input": "1.0.0"
          },
          {
            "type": "flag",
            "flag": "build",
            "input": "10"
          },
          {
            "type": "arg",
            "input": "/home/kr/Projects/mobile/mobile-app/"
          },
          {
            "type": "arg",
            "input": "--json"
          }
        ],
        "metadata": {
          "flags": {}
        }
      }
    },
    "args": [
      "--json"
    ]
  }
}
